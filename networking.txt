public class NetworkRequest
public input xml

foreach(InputSlot s in inputs)
if( GetKey(s.key, s.altKey))
new NetworkRequest( requestId);

in server:

parse to NetworkRequest;
get lua func table and register function accessors
call lua functions based on networkRequest and tableID

lua calls functions in gameCore class
gameCore class is init with map, tileset
gameCore can mark stuff dirty wich writes its state into an update queue.
update gets pushed in next server tick

server sends packed networkResponse back to client
networkResponse contains respnse type(enum) and data(byte[])

clients unpacks data based on type

InputData
MapData
MapTileList
EntityChangeList
globalChange
PlayerData
CharacterClassInfList
RaceInfList
TilesetData

client then processes networkResponse via ClientMain (init with map, tileset)



class structure on server:
string path
GameLoader(path)
ServerCore(gameLoader)

class structure on client:
string ip
ClientMain(ip)
Input(clientMain)
MapScreen(clientMain)
StatsScreen(clientMain)
